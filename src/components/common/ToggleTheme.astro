---
import Icon from '~/components/common/Icon.astro';

import { UI } from '~/utils/config';

export interface Props {
  label?: string;
  class?: string;
  iconClass?: string;
  iconName?: string;
}

const {
  label = 'Toggle between Dark and Light mode',
  class:
    className = 'toggleTheme hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center',
  iconClass = 'w-6 h-6',
  iconName = 'bulb',
} = Astro.props;
---

{
  //TODO: Get the icon to swap between light and dark mode
  //TODO: Get the sound to play when swapping themes
  !(UI.theme && UI.theme.endsWith(':only')) && (
    <button id="theme_button" type="button" class={className} aria-label={label} data-aw-toggle-color-scheme>
      <Icon name={iconName} attributes={{ class: { iconClass } }} />
    </button>
  )
}
<script>
  let isDark = false;
  const button = document.querySelector('#theme_button');
  let offAudio = new Audio('/src/assets/audio/light_off.mp3');
  let onAudio = new Audio('/src/assets/audio/light_on.mp3');
  offAudio.loop = false;
  onAudio.loop = false;

  // Handle clicks on each button.
  if (offAudio && offAudio instanceof HTMLAudioElement && button) {
    button.addEventListener('click', () => {
      try {
        if (isDark) {
          console.debug('Dark mode');
          offAudio.play();
          isDark = false;
        } else {
          console.debug('Light mode');
          onAudio.play();
          isDark = true;
        }
      } catch (error) {
        console.log(error);
      }
    });
  }
</script>
