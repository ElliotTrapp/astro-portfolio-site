---
import type { HTMLAttributes } from 'astro/types';
import { parse } from 'node-html-parser';

export interface AttributesProps extends HTMLAttributes<'svg'> {}

export interface IconProps extends HTMLAttributes<'svg'> {
  name: string;
}

function getSVG(name: string = 'grad') {
  const filepath = `/src/assets/images/icons/${name}.svg`;
  const files = import.meta.globEager<string>('/src/assets/images/icons/**/*.svg', {
    as: 'raw',
  });

  if (!(filepath in files)) {
    throw new Error(`${filepath} not found`);
  }

  const root = parse(files[filepath]);

  const svg = root.querySelector('svg');
  if (svg === null) {
    throw new Error(`${filepath} is not a valid SVG`);
  }
  const { attributes, innerHTML } = svg;

  return {
    attributes,
    innerHTML,
  };
}

const { name: name, ...attributes } = Astro.props as IconProps;
const { attributes: baseAttributes, innerHTML } = getSVG(name);

const svgAttributes = { ...baseAttributes, ...attributes };
---

{/* TODO: Optimize SVG */}
<svg {...svgAttributes} set:html={innerHTML} />
