---
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';
import type { CallToAction } from '~/types';

export interface Props {
  id?: string;
  title?: string;
  subtitle?: string;
  tagline?: string;
  content?: string;
  actions?: string | CallToAction[];
  image?: string | any; // TODO: find HTMLElementProps
}

const {
  id,
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  actions = await Astro.slots.render('actions'),
} = Astro.props;
---

<section class=`relative mt-8` {...id ? { id } : {}}>
  <div id="hero_container" class="flex flex-row p-4 m-auto">
    <div id="hero_text_block" class="flex flex-col items-start text-left justify-start">
      {
        title && (
          <h1
            class="text-5xl md:text-6xl text-left font-bold leading-tighter tracking-tighter mb-4 font-heading"
            set:html={title}
          />
        )
      }
      {subtitle && <p class="text-left text-xl text-muted mb-6 " set:html={subtitle} />}
      {
        actions && (
          <div class="flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4 items-start justify-start">
            {Array.isArray(actions) ? (
              actions.map((action) => (
                <div class="flex">
                  <Button {...(action || {})} class="w-full sm:mb-0" />
                </div>
              ))
            ) : (
              <Fragment set:html={actions} />
            )}
          </div>
        )
      }
    </div>
    <div id="hero_image" class="p-16 w-[100dvw]">
      <Image src="~/assets/images/robots.png" alt="Robots" class="rounded-md" loading="eager" />
    </div>
  </div>
</section>
