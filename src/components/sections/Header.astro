---
import Icon from '~/components/common/Icon.astro';
import Avatar from '~/components/Avatar.astro';
import ThemeButton from '~/components/common/ThemeButton.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';

import { getHomePermalink } from '~/utils/permalinks';
import { trimSlash } from '~/utils/permalinks';
import type { CallToAction } from '~/types';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface ActionLink extends CallToAction {}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const { id = 'header', links = [], isFullWidth = false, showToggleTheme = false, position = 'right' } = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class="sticky top-0 z-40 flex-none mx-auto w-full border-b border-gray-50/0 transition-[opacity] ease-in-out bg-white text-grey dark:bg-black/80 dark:text-white rounded-b-xl"
  {...id ? { id } : {}}
>
  <div class="absolute inset-0"></div>
  <div
    class:list={[
      'relative  py-3 px-3 md:px-6 mx-auto w-full md:flex md:justify-between',
      {
        'max-w-7xl': !isFullWidth,
      },
    ]}
  >
    <div class:list={[{ 'mr-auto rtl:mr-0 rtl:ml-auto': position === 'right' }, 'flex justify-between']}>
      <a class="flex items-center" href={getHomePermalink()}>
        <Avatar />
      </a>
      <div class="flex items-center md:hidden">
        <ToggleMenu />
      </div>
    </div>
    <nav
      class="items-center w-full md:w-auto hidden md:flex overflow-y-auto overflow-x-hidden md:overflow-y-visible md:overflow-x-auto md:mx-5"
      aria-label="Main navigation"
    >
      <ul
        class="flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-medium"
      >
        {
          links.map(({ text, href, links }) => (
            <li class={links?.length ? 'dropdown' : ''}>
              {links?.length ? (
                <>
                  <button class="hover:text-content-link px-4 py-3 flex items-center">
                    {text} <Icon name="chevron-down" class="w-3.5 h-3.5 ml-0.5 rtl:ml-0 rtl:mr-0.5 hidden md:inline" />
                  </button>
                  <ul class="dropdown-menu md:backdrop-blur-md dark:md:bg-dark rounded md:absolute pl-4 md:pl-0 md:hidden font-medium md:bg-white/90 md:min-w-[200px] drop-shadow-xl">
                    {links.map(({ text: text2, href: href2 }) => (
                      <li>
                        <a
                          class:list={[
                            'first:rounded-t last:rounded-b md:hover:bg-gray-100 hover:text-content-link dark:hover:bg-gray-700 py-2 px-5 block whitespace-no-wrap',
                            {
                              'bg-gradient-to-r from-blue-600 to-violet-600 bg-clip-text text-transparent dark:from-fuchsia-500 dark:to-cyan-500':
                                href2 === currentPath,
                            },
                          ]}
                          href={href2}
                        >
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class:list={[
                    'hover:text-content-link px-4 py-3 flex items-centers',
                    {
                      'bg-gradient-to-r from-blue-600 to-violet-600 bg-clip-text text-transparent dark:from-fuchsia-500 dark:to-cyan-500':
                        href === currentPath,
                    },
                  ]}
                  href={href}
                >
                  {text}
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </nav>
    <div
      class:list={[
        { 'ml-auto rtl:ml-0 rtl:mr-auto': position === 'left' },
        'hidden md:self-center flex md:flex items-center md:mb-0 fixed w-full md:w-auto md:static justify-end left-0 rtl:left-auto rtl:right-0 bottom-0 p-3 md:p-0',
      ]}
    >
      <div class="items-center flex justify-between w-full md:w-auto">
        <div class="flex">
          {showToggleTheme && <ThemeButton />}
        </div>
      </div>
    </div>
  </div>
</header>

<style>
  #header.scroll > div:first-child {
    @apply md:backdrop-blur-md;
    box-shadow: 0 0.375rem 1.5rem 0 rgb(140 152 164 / 13%);
  }
  .dark #header.scroll > div:first-child,
  #header.scroll.dark > div:first-child {
    @apply border-b border-gray-500/20;
    box-shadow: none;
  }

  #header.expanded nav {
    position: fixed;
    top: 70px;
    left: 0;
    right: 0;
    bottom: 70px !important;
    padding: 0 5px;
  }

  .dropdown:hover .dropdown-menu {
    display: block;
  }
</style>

{
  /* 

[astro-icon].icon-light > * {
  stroke-width: 1.2;
}

[astro-icon].icon-bold > * {
  stroke-width: 2.4;
}

  /* #header.scroll > div:last-child {
  @apply py-3;
} 
*/
}
