---
import Icon from '~/components/common/Icon.astro';
import { twMerge } from 'tailwind-merge';
import type { ItemTimeline } from '~/types';

export interface Props {
  items?: Array<ItemTimeline>;
  defaultIcon?: string;
  classes?: Record<string, string>;
}

const { items = [], classes = {}, defaultIcon } = Astro.props as Props;

const {
  container: containerClass = '',
  panel: panelClass = '',
  title: titleClass = '',
  date: dateClass = '',
  institution: institutionClass = '',
  location: locationClass = '',
  description: descriptionClass = '',
  icon: defaultIconClass = 'text-primary dark:text-slate-200 border-primary dark:border-blue-700',
} = classes;
---

{
  items && items.length && (
    <div class={containerClass}>
      {items.map(
        (
          { title, institution, link, location, date, bullets, description, icon, classes: itemClasses = {} },
          index = 0
        ) => (
          <div class={twMerge('flex', panelClass, itemClasses?.panel)}>
            <div class="flex flex-col items-center mr-4 rtl:mr-0 rtl:ml-4">
              <div>
                <div class="flex items-center justify-center">
                  {(icon || defaultIcon) && (
                    <Icon
                      name={icon || defaultIcon}
                      class={twMerge('w-10 h-10 p-2 rounded-full border-2', defaultIconClass, itemClasses?.icon)}
                    />
                  )}
                </div>
              </div>
              {index !== items.length - 1 && <div class="w-px h-full bg-black/10 dark:bg-slate-400/50" />}
            </div>
            <div class={`pt-1 ${index !== items.length - 1 ? 'pb-8' : ''}`}>
              {title && <h1 class={twMerge('text-xl font-bold', titleClass, itemClasses?.title)} set:html={title} />}
              <p class="mt-2 text-muted" set:html={institution} />
              <p class="" set:html={location} />
              <p class=" text-muted " set:html={date} />
              {bullets && (
                <ul class="list-disc list-inside">
                  {bullets.map((bullet) => (
                    <li class={'text-default mt-2'} set:html={bullet} />
                  ))}
                </ul>
              )}
            </div>
          </div>
        )
      )}
    </div>
  )
}

{
  /* TODO: Fix this
              {description && 
                description.map(
                  (entry ) => ()
              */
}
